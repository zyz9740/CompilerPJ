Row  Col  Type                Token/Error
4    1    reserved keyword    PROGRAM
4    9    reserved keyword    IS
5    5    reserved keyword    VAR
5    9    identifier          I
5    10   delimiter           ,
5    12   identifier          ANSWER
5    19   delimiter           :
5    21   identifier          INTEGER
5    29   operator            :=
5    32   integer             0
5    33   delimiter           ;
6    5    reserved keyword    PROCEDURE
6    15   identifier          FACTORIAL
6    24   delimiter           (
6    25   delimiter           )
6    27   reserved keyword    IS
7    5    reserved keyword    VAR
7    9    identifier          J
7    11   delimiter           :
7    13   identifier          INTEGER
7    21   operator            :=
7    24   integer             0
7    25   delimiter           ;
8    5    reserved keyword    PROCEDURE
9    11   identifier          FACT
9    15   delimiter           (
9    16   delimiter           )
9    18   reserved keyword    IS
9    21   reserved keyword    BEGIN
10   9    reserved keyword    IF
10   12   identifier          J
10   14   operator            <=
10   17   identifier          I
10   19   reserved keyword    THEN
10   24   identifier          MULT
10   28   delimiter           (
10   29   delimiter           )
10   30   delimiter           ;
10   32   identifier          J
10   34   operator            :=
10   37   identifier          J
10   39   operator            +
10   41   integer             1
10   42   delimiter           ;
10   44   identifier          FACT
10   48   delimiter           (
10   49   delimiter           )
10   50   delimiter           ;
10   52   reserved keyword    END
10   55   delimiter           ;
11   7    reserved keyword    END
11   10   delimiter           ;
12   7    identifier          MULT
12   11   delimiter           (
12   12   delimiter           )
12   14   reserved keyword    IS
13   9    reserved keyword    VAR
13   13   identifier          I
13   15   delimiter           :
13   17   identifier          INTEGER
13   25   operator            :=
13   28   integer             0
13   29   delimiter           ;
14   7    reserved keyword    BEGIN
15   9    identifier          I
15   11   operator            :=
15   14   identifier          ANSWER
15   20   delimiter           ;
16   13   identifier          I
16   15   operator            :=
16   18   identifier          I
16   20   operator            *
16   22   identifier          J
16   23   delimiter           ;
17   13   identifier          ANSWER
17   20   operator            :=
17   23   identifier          I
17   24   delimiter           ;
18   7    reserved keyword    END
18   10   delimiter           ;
19   5    reserved keyword    BEGIN
20   5    identifier          ANSWER
20   12   operator            :=
20   15   integer             1
20   16   delimiter           ;
21   5    identifier          J
21   7    operator            :=
21   10   integer             1
21   11   delimiter           ;
22   5    identifier          FACT
22   9    delimiter           (
22   10   delimiter           )
22   11   delimiter           ;
23   5    reserved keyword    END
23   8    delimiter           ;
24   1    reserved keyword    BEGIN
25   5    reserved keyword    WRITE
25   11   delimiter           (
25   12   string              "The first 5 factorials are (in ascending order):"
25   62   delimiter           )
25   63   delimiter           ;
26   5    identifier          I
26   7    operator            :=
26   10   integer             1
26   11   delimiter           ;
27   5    reserved keyword    LOOP
28   5    reserved keyword    IF
28   8    identifier          I
28   10   operator            >
28   12   integer             5
28   14   reserved keyword    THEN
28   19   reserved keyword    EXIT
28   23   delimiter           ;
28   25   reserved keyword    END
28   28   delimiter           ;
29   9    identifier          FACTORIAL
29   18   delimiter           (
29   19   delimiter           )
29   20   delimiter           ;
30   9    reserved keyword    WRITE
30   14   delimiter           (
30   15   string              "FACTORIAL("
30   27   delimiter           ,
30   29   identifier          I
30   30   delimiter           ,
30   32   string              ") = "
30   38   delimiter           ,
30   40   identifier          ANSWER
30   46   delimiter           )
30   47   delimiter           ;
31   5    identifier          I
31   7    operator            :=
31   10   identifier          I
31   12   operator            +
31   14   integer             1
31   15   delimiter           ;
32   5    reserved keyword    END
32   8    delimiter           ;
33   1    reserved keyword    END
33   4    delimiter           ;
Tokens: 140
Errors: 0
